{"version":3,"file":"component---src-pages-index-jsx-17ba6c4a4878241f71cb.js","mappings":"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","sources":["webpack://tvz-gatsby/./src/components/container.jsx","webpack://tvz-gatsby/./src/components/section.jsx","webpack://tvz-gatsby/./src/components/seo.jsx","webpack://tvz-gatsby/./src/pages/index.jsx"],"sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"container\">\n      {children}\n    </div>\n  )\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Container\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Section = ({ children }) => {\n  return (\n    <>\n      <section className=\"section\">\n        {children}\n      </section>\n    </>\n  )\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Section\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import React from \"react\";\nimport { graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../components/layouts/layout\"\nimport Container from \"../components/container\"\nimport Section from \"../components/section\"\nimport Link from \"../components/Link\"\nimport Seo from \"../components/seo\"\nimport ResultCombo from \"../components/teams/result_combo\"\n\nconst IndexPage = ({data}) => {\n  const { allMdx, allInstagramContent } = data // data.mdx holds your post data\n  const posts = allMdx.edges\n  const instas = allInstagramContent.edges\n  return (\n    <Layout title={\"Home\"}>\n      <Section>\n        <Container>\n          <div className=\"columns\">\n            <div className=\"column is-12 content\">\n              <h2>Spielbetrieb</h2>\n              <ResultCombo shv_id={140428} verein={true}/>\n            </div>\n          </div>\n        </Container>\n      </Section>\n\n      <Section>\n        <Container>\n          <div className=\"columns is-multiline\">\n            <div className=\"column is-12 content\">\n              <h2>Instagram</h2>\n            </div>\n              {instas.map(({ node }) => {\n                const title = node.caption\n                switch (node.media_type) {\n                  case 'IMAGE':\n                    return (\n                        <>\n                          <div className=\"card column is-3 m-2\">\n                            <div className=\"card-image\">\n                              <a href={node.permalink}>\n                                <GatsbyImage\n                                    image={getImage(node.localFile)}\n                                    alt=\"\"\n                                />\n                              </a>\n                            </div>\n                            <div className=\"card-content\">\n                              <div className=\"content\">{title}</div>\n                            </div>\n                          </div>\n                        </>\n                    )\n                  case 'VIDEO':\n                    return (\n                        <>\n                          <div className=\"card column is-3 m-2\">\n                            <h4>Video</h4>\n                          </div>\n                        </>\n                    )\n                  case 'CAROUSEL_ALBUM':\n                    return (\n                        <>\n                          <div className=\"card column is-3 m-2\">\n                            <div className=\"card-image\">\n                              <a href={node.permalink}>\n                                <GatsbyImage\n                                    image={getImage(node.localFile)}\n                                    alt=\"\"\n                                />\n                              </a>\n                            </div>\n                            <div className=\"card-content\">\n                              <div className=\"content\">{title}</div>\n                            </div>\n                          </div>\n                        </>\n                    )\n                  default:\n                    return (\n                        <>\n                          <div className=\"card column is-3 m-2\">\n                            <h4>unknown type {node.media_type}</h4>\n                          </div>\n                        </>\n                    )\n                }\n              })}\n          </div>\n        </Container>\n      </Section>\n      <Section>\n        <Container>\n          <div className=\"columns\">\n            <div className=\"column is-10 is-offset-1 content\">\n              <h2>News</h2>\n\n              {posts.map(({ node }) => {\n                const title = node.frontmatter.title || node.frontmatter.slug\n                const artDate = node.frontmatter.date\n                let image = null\n                let alt = null\n                if (node.frontmatter.images) {\n                  image = node.frontmatter.images[0]\n                  alt = image.caption | image.name | title\n                }\n\n                return (\n                    <div key={node.frontmatter.slug} className=\"box\">\n                      <div className=\"box-header\">\n                        <h4 className=\"title is-4\">\n                          <Link to={node.frontmatter.slug}>{title}\n                          </Link>\n                          {(node.frontmatter.date) && (\n                              <span className=\"tag is-rounded is-pulled-right\">\n                        {node.frontmatter.date}\n                        </span>\n                          )}\n                          {(node.frontmatter.tags) && (\n                              node.frontmatter.tags.map(tag => (\n                                  <span className=\"tag is-rounded is-light is-danger is-pulled-right\">{tag}</span>\n                              ))\n                          )}\n                        </h4>\n                      </div>\n                      <div className=\"box-content\">\n                        <div className=\"columns\">\n                          {(image) && (\n                              <div className=\"column is-2\">\n                                <GatsbyImage\n                                    image={getImage(image.url)}\n                                    alt={alt}\n                                />\n                              </div>\n                          )}\n                          <div className=\"column\">\n                            <div className=\"box-content-text\">\n                              <p>{node.excerpt}</p>\n                            </div>\n                            <div className=\"has-text-right\">\n                              <Link to={node.frontmatter.slug} className=\"button is-small\">Lesen</Link>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                )\n              })}\n            </div>\n          </div>\n        </Container>\n      </Section>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"TV Zofingen Handball\" />\n\nexport default IndexPage\n\nexport const frontNewsQuery = graphql`\n  query frontNewsQuery {\n    allMdx(\n      filter: {frontmatter: {slug: {regex: \"/news/\"}}}\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 3\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 350)\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            slug\n            tags\n            title\n            images {\n              caption\n              name\n              url {\n                childImageSharp {\n                  gatsbyImageData(\n                    layout: CONSTRAINED\n                    width: 256\n                    height: 256\n                    placeholder: BLURRED\n                    transformOptions: {fit:COVER, cropFocus:ATTENTION}\n                    formats: [AUTO, WEBP, AVIF]\n                  )\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    allInstagramContent(limit: 3) {\n      edges {\n        node {\n          caption\n          media_url\n          media_type\n          permalink\n          localFile {\n            childImageSharp {\n              gatsbyImageData(layout: CONSTRAINED, placeholder: BLURRED)\n            }\n          }\n          album {\n            localFile {\n              childImageSharp {\n                gatsbyImageData(layout: CONSTRAINED, placeholder: BLURRED)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["children","className","Seo","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","defaultProps","Head","data","allMdx","allInstagramContent","posts","edges","instas","shv_id","verein","map","node","caption","media_type","href","permalink","G","image","getImage","localFile","alt","frontmatter","slug","date","images","key","to","tags","tag","url","excerpt"],"sourceRoot":""}