{"version":3,"file":"component---src-pages-using-typescript-tsx-44a5fbc8d67d2df48663.js","mappings":"yLA4CaA,EAA0B,kBAAMC,EAAAA,cAACC,EAAAA,EAAD,CAAKC,MAAM,oBAAjD,EAEP,UAlCwD,SAAC,GAAD,IACtDC,EADsD,EACtDA,KACAC,EAFsD,EAEtDA,SAFsD,OAItDJ,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAAA,mBACkBA,EAAAA,cAAAA,IAAAA,KAAAA,0BAElBA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,OAAAA,KAAAA,YAD3C,0CAE8BA,EAAAA,cAAAA,OAAAA,KAAAA,YAF9B,qCAGUA,EAAAA,cAAAA,OAAAA,KAAAA,oBAHV,MAKAA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,OAAAA,KAAAA,cAD3C,oBAEUA,EAAAA,cAAAA,OAAAA,KAAAA,cAFV,gBAE8CA,EAAAA,cAAAA,OAAAA,KAAAA,YAF9C,UAIAA,EAAAA,cAAAA,IAAAA,KAAAA,gCAC+BA,EAAAA,cAAAA,OAAAA,KAAOI,EAASC,UAD/C,uBAEYF,EAAKG,KAAKC,UAFtB,KAIAP,EAAAA,cAAAA,IAAAA,KAAAA,kCACkC,IAChCA,EAAAA,cAAAA,IAAAA,CAAGQ,KAAK,yEAAR,kCAFF,KAOAR,EAAAA,cAACS,EAAAA,KAAD,CAAMC,GAAG,KAAT,2BA5BJ,C,+CCDA,SAAST,EAAT,GAAgD,IAAD,IAAhCU,EAAgC,EAAhCA,YAAaT,EAAmB,EAAnBA,MAAOU,EAAY,EAAZA,SACzBN,GAASO,EAAAA,EAAAA,gBAAe,YAAxBP,KAcFQ,EAAkBH,GAAeL,EAAKS,aAAaJ,YACnDK,EAAY,UAAGV,EAAKS,oBAAR,aAAG,EAAmBb,MAExC,OACE,gCACE,6BAAQc,EAAkBd,EAAN,MAAiBc,EAAiBd,GACtD,wBAAMe,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAAShB,IACnC,wBAAMiB,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAAS,UAAAZ,EAAKS,oBAAL,eAAmBK,SAAnB,KACtC,wBAAMH,KAAK,gBAAgBC,QAAShB,IACpC,wBAAMe,KAAK,sBAAsBC,QAASJ,IACzCF,EAGN,CAEDX,EAAIoB,aAAe,CACjBV,YAAY,IAQd,K","sources":["webpack://tvz-gatsby/./src/pages/using-typescript.tsx","webpack://tvz-gatsby/./src/components/seo.jsx"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","data","location","pathname","site","buildTime","href","Link","to","description","children","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","defaultProps"],"sourceRoot":""}