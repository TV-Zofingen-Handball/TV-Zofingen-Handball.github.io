{"version":3,"file":"component---src-pages-index-js-f3274244915239bdf5da.js","mappings":"2HAsBA,IAZkB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACnB,OACE,uBAAKC,UAAU,aACZD,EAGN,C,qCCQD,IAdgB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACjB,OACE,gCACE,2BAASC,UAAU,WAChBD,GAIR,C,+CCPD,SAASE,EAAT,GAAgD,IAAD,IAAhCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,MAAOJ,EAAY,EAAZA,SACzBK,GAASC,EAAAA,EAAAA,gBAAe,YAAxBD,KAcFE,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAY,UAAGJ,EAAKG,oBAAR,aAAG,EAAmBJ,MAExC,OACE,gCACE,6BAAQK,EAAkBL,EAAN,MAAiBK,EAAiBL,GACtD,wBAAMM,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASP,IACnC,wBAAMQ,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAAS,UAAAN,EAAKG,oBAAL,eAAmBK,SAAnB,KACtC,wBAAMH,KAAK,gBAAgBC,QAASP,IACpC,wBAAMM,KAAK,sBAAsBC,QAASJ,IACzCP,EAGN,CAEDE,EAAIY,aAAe,CACjBX,YAAY,IAQd,K,yICmBaY,EAAO,kBAAM,gBAAC,IAAD,CAAKX,MAAM,wBAAjB,EAEpB,UAjEkB,SAAC,GAAY,IAEvBY,EAFsB,EAAVC,KACVC,OACaC,MACrB,OACE,gBAAC,IAAD,CAAQf,MAAO,QACf,gBAAC,IAAD,KACE,gBAAC,IAAD,KAEA,uBAAKH,UAAU,mCACb,kCAECe,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNjB,EAAQiB,EAAKC,YAAYlB,OAASiB,EAAKC,YAAYC,KACnDC,EAAUH,EAAKC,YAAYG,KAC7BC,EAAQ,KACRC,EAAM,KAMV,OALIN,EAAKC,YAAYM,SAEnBD,GADAD,EAAQL,EAAKC,YAAYM,OAAO,IACpBC,QAAUH,EAAMhB,KAAON,GAInC,uBAAK0B,IAAKT,EAAKC,YAAYC,KAAMtB,UAAU,OACzC,uBAAKA,UAAU,cACb,sBAAIA,UAAU,cAAcG,EAC1B,wBAAMH,UAAU,0BACd,qBAAG8B,KAAK,cAAR,OAGJ,6BAAQP,IAEV,uBAAKvB,UAAU,eACb,uBAAKA,UAAU,WACXyB,GACA,uBAAKzB,UAAU,eACb,gBAAC,EAAA+B,EAAD,CACEN,OAAOO,EAAAA,EAAAA,GAASP,EAAMQ,KACtBP,IAAKA,KAIX,uBAAK1B,UAAU,UACb,uBAAKA,UAAU,oBACb,yBAAIoB,EAAKc,UAEX,uBAAKlC,UAAU,kBACb,gBAAC,IAAD,CAAMmC,GAAIf,EAAKC,YAAYC,KAAMtB,UAAU,mBAA3C,aAOb,OAQR,C","sources":["webpack://tvz-gatsby/./src/components/container.jsx","webpack://tvz-gatsby/./src/components/section.jsx","webpack://tvz-gatsby/./src/components/seo.jsx","webpack://tvz-gatsby/./src/pages/index.js"],"sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Container = ({ children }) => {\n  return (\n    <div className=\"container\">\n      {children}\n    </div>\n  )\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Container\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst Section = ({ children }) => {\n  return (\n    <>\n      <section className=\"section\">\n        {children}\n      </section>\n    </>\n  )\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Section\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import React from \"react\";\nimport { graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../components/layouts/layout\"\nimport Container from \"../components/container\"\nimport Section from \"../components/section\"\nimport Link from \"../components/Link\"\nimport Seo from \"../components/seo\"\n\nconst IndexPage = ({data}) => {\n  const { allMdx } = data // data.mdx holds your post data\n  const posts = allMdx.edges\n  return (\n    <Layout title={\"Home\"}>\n    <Section>\n      <Container>\n\n      <div className=\"column is-8 is-offset-2 content\">\n        <h2>News</h2>\n\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.frontmatter.slug\n          const artDate = node.frontmatter.date\n          let image = null\n          let alt = null\n          if (node.frontmatter.images) {\n            image = node.frontmatter.images[0]\n            alt = image.caption | image.name | title\n          }\n\n          return (\n            <div key={node.frontmatter.slug} className=\"box\">\n              <div className=\"box-header\">\n                <h4 className=\"title is-4\">{title}\n                  <span className=\"labels is-pulled-right\">\n                    <a href=\"label.html\"> </a>\n                  </span>\n                </h4>\n                <small>{artDate}</small>\n              </div>\n              <div className=\"box-content\">\n                <div className=\"columns\">\n                  {(image) && (\n                    <div className=\"column is-2\">\n                      <GatsbyImage\n                        image={getImage(image.url)}\n                        alt={alt}\n                      />\n                    </div>\n                  )}\n                  <div className=\"column\">\n                    <div className=\"box-content-text\">\n                      <p>{node.excerpt}</p>\n                    </div>\n                    <div className=\"has-text-right\">\n                      <Link to={node.frontmatter.slug} className=\"button is-small\">Lesen</Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )\n        })}\n\n      </div>\n\n      </Container>\n    </Section>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"TV Zofingen Handball\" />\n\nexport default IndexPage\n\nexport const frontNewsQuery = graphql`\n  query frontNewsQuery {\n    allMdx(\n      filter: {frontmatter: {slug: {regex: \"/news/\"}}}\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 3\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 350)\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            slug\n            title\n            images {\n              caption\n              name\n              url {\n                childImageSharp {\n                  gatsbyImageData(\n                    layout: CONSTRAINED\n                    width: 256\n                    height: 256\n                    placeholder: BLURRED\n                    transformOptions: {fit:COVER, cropFocus:ATTENTION}\n                    formats: [AUTO, WEBP, AVIF]\n                  )\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["children","className","Seo","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","defaultProps","Head","posts","data","allMdx","edges","map","node","frontmatter","slug","artDate","date","image","alt","images","caption","key","href","G","getImage","url","excerpt","to"],"sourceRoot":""}