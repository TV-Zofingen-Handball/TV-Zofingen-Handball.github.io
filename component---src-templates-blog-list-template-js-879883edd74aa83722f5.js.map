{"version":3,"file":"component---src-templates-blog-list-template-js-879883edd74aa83722f5.js","mappings":"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","sources":["webpack://tvz-gatsby/./src/components/Link.jsx","webpack://tvz-gatsby/./src/components/pagination.jsx","webpack://tvz-gatsby/./src/templates/blog-list-template.js","webpack://tvz-gatsby/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import React from \"react\"\nimport { Link as GatsbyLink } from \"gatsby\"\n\n// Since DOM elements <a> cannot receive activeClassName\n// and partiallyActive, destructure the prop here and\n// pass it only to GatsbyLink\nconst Link = ({ children, to, activeClassName, partiallyActive, ...other }) => {\n  // Tailor the following test to your environment.\n  // This example assumes that any internal link (intended for Gatsby)\n  // will start with exactly one slash, and that anything else is external.\n  const internal = /^\\/(?!\\/)/.test(to)\n\n  // Use Gatsby Link for internal links, and <a> for others\n  if (internal) {\n    return (\n      <GatsbyLink\n        to={to}\n        activeClassName={activeClassName}\n        partiallyActive={partiallyActive}\n        {...other}\n      >\n        {children}\n      </GatsbyLink>\n    )\n  }\n  return (\n    <a href={to} target=\"_blank\" rel=\"noreferrer\" {...other}>\n      {children}\n    </a>\n  )\n}\n\nexport default Link\n","import * as React from \"react\"\nimport Link from \"./Link\"\n\nconst Pagination = ({ props }) => {\n  const baseUrl = '/news/'\n  const visiblePagesHalf = 2 // hom many pages before and after current should visible\n  const posts = props.data.allMdx.edges\n  const { currentPage, numPages } = props.pageContext\n  const isFirst = currentPage === 1\n  const isLast = currentPage === numPages\n  const prevPage = currentPage - 1 === 1 ? baseUrl : (currentPage - 1).toString()\n  const nextPage = baseUrl + (currentPage + 1).toString()\n  const showEllipsisBefore = (currentPage - visiblePagesHalf) > 2\n  const showEllipsisAfter = (currentPage + visiblePagesHalf) < (numPages - 1)\n  const widthBefore = Math.min(visiblePagesHalf, currentPage - visiblePagesHalf)\n  const widthAfter = Math.min(numPages - currentPage, visiblePagesHalf)\n  const currPage = isFirst ? '' : currentPage\n\n  return (\n    <nav className=\"pagination mb-3\" role=\"navigation\" aria-label=\"navigation\">\n      {!isFirst && (\n          <Link to={prevPage} className=\"pagination-previous\" rel=\"prev\">\n            ← Previous Page\n          </Link>\n      )}\n      {!isLast && (\n        <Link to={nextPage} className=\"pagination-next\" rel=\"prev\">\n          Next Page →\n        </Link>\n      )}\n      <ul className=\"pagination-list\">\n      {(currentPage - visiblePagesHalf) >= 0 && (\n        <li><Link to={baseUrl} className=\"pagination-link\" aria-label=\"Goto page 1\">1</Link></li>\n      )}\n      {showEllipsisBefore && (\n        <li><span className=\"pagination-ellipsis\">&hellip;</span></li>\n      )}\n      {(currentPage - visiblePagesHalf) > 0 && (\n        Array(widthBefore).fill(1).map((el, i) =>\n          <li><Link to={`${baseUrl}${currentPage - widthBefore + i}`} className=\"pagination-link\" aria-label={`Page ${currentPage - widthBefore + i}`} aria-current=\"page\">{currentPage - widthBefore + i}</Link></li>\n        )\n      )}\n      <li><Link to={`${baseUrl}${currPage}`} className=\"pagination-link is-current\" aria-label={`Page ${currentPage}`} aria-current=\"page\">{currentPage}</Link></li>\n      {Array(Math.min(numPages - currentPage, visiblePagesHalf)).fill(1).map((el, i) =>\n        <li><Link to={`${baseUrl}${currentPage + i + 1}`} className=\"pagination-link\" aria-label={`Page ${currentPage + i + 1}`}>{currentPage + i + 1}</Link></li>\n      )}\n      {showEllipsisAfter && (\n        <li><span className=\"pagination-ellipsis\">&hellip;</span></li>\n      )}\n      {((currentPage + visiblePagesHalf) < numPages) && (\n        <li><Link to={`${baseUrl}${numPages}`} className=\"pagination-link\" aria-label={`Page ${numPages}`}>{numPages}</Link></li>\n      )}\n      </ul>\n    </nav>\n  )\n}\n\nexport default Pagination\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layouts/layout\"\nimport Link from \"../components/Link\"\nimport Pagination from \"../components/pagination\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\n\nexport default class BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.allMdx.edges\n\n    return (\n      <Layout title={\"News\"}>\n\n      <div className=\"container\">\n          <section className=\"articles\">\n              <div className=\"column is-8 is-offset-2\">\n\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.frontmatter.slug\n          const artDate = node.frontmatter.date\n          let image = null\n          let alt = null\n          if (node.frontmatter.images) {\n            image = node.frontmatter.images[0]\n            alt = image.caption | image.name | title\n          }\n\n          return (\n            <div key={node.frontmatter.slug} className=\"box\">\n              <div className=\"box-header\">\n                <h4 className=\"title is-4\">{title}\n                  <span className=\"labels is-pulled-right\">\n                    <a href=\"label.html\"> </a>\n                  </span>\n                </h4>\n                <small>{artDate}</small>\n              </div>\n              <div className=\"box-content\">\n                <div className=\"columns\">\n                  {(image) && (\n                    <div className=\"column is-2\">\n                      <GatsbyImage\n                        image={getImage(image.url)}\n                        alt={alt}\n                      />\n                    </div>\n                  )}\n                  <div className=\"column\">\n                    <div className=\"box-content-text\">\n                      <p>{node.excerpt}</p>\n                    </div>\n                    <div className=\"has-text-right\">\n                      <Link to={node.frontmatter.slug} className=\"button is-small\">Lesen</Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )\n        })}\n\n            </div>\n\n            <Pagination props={this.props} />\n          </section>\n        </div>\n\n      </Layout>\n    )\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMdx(\n      filter: {frontmatter: {slug: {regex: \"/news/\"}}}\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 350)\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            slug\n            title\n            images {\n              caption\n              name\n              url {\n                childImageSharp {\n                  gatsbyImageData(\n                    layout: CONSTRAINED\n                    width: 256\n                    height: 256\n                    placeholder: BLURRED\n                    transformOptions: {fit:COVER, cropFocus:ATTENTION}\n                    formats: [AUTO, WEBP, AVIF]\n                  )\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["children","to","activeClassName","partiallyActive","other","test","href","target","rel","props","baseUrl","data","allMdx","edges","pageContext","currentPage","numPages","isFirst","isLast","prevPage","toString","nextPage","showEllipsisBefore","showEllipsisAfter","widthBefore","Math","min","currPage","className","role","Link","Array","fill","map","el","i","BlogList","render","posts","this","title","node","frontmatter","slug","artDate","date","image","alt","images","caption","name","key","G","getImage","url","excerpt","React","_objectWithoutPropertiesLoose","source","excluded","sourceKeys","Object","keys","length","indexOf"],"sourceRoot":""}